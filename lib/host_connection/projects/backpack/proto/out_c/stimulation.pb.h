/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_STIMULATIONPKG_STIMULATION_PB_H_INCLUDED
#define PB_STIMULATIONPKG_STIMULATION_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _stimulationPkg_stiAlgoType {
    stimulationPkg_stiAlgoType_FIXED_VOLTAGE = 0,
    stimulationPkg_stiAlgoType_RANDOMLY_ADJUST = 1,
    stimulationPkg_stiAlgoType_SPEED_BASED_REGULATOR = 2
} stimulationPkg_stiAlgoType;

/* Struct definitions */
/* ******************************************************************************
  STIMULATION CONFIG MESSENGER
****************************************************************************** */
typedef struct _stimulationPkg_channelConfigMsg {
    bool enable;
    uint32_t duration;
    uint32_t ton1;
    uint32_t toff1;
    uint32_t ton2;
    uint32_t toff2;
    uint32_t cycle;
    uint32_t rest;
    float amp;
    uint32_t chId;
} stimulationPkg_channelConfigMsg;

typedef struct _stimulationPkg_burstMsg {
    bool enable;
} stimulationPkg_burstMsg;

typedef struct _stimulationPkg_channelsConfigMsg {
    bool stiStartStop;
    float gain;
    bool has_burst;
    stimulationPkg_burstMsg burst;
    pb_size_t config_count;
    stimulationPkg_channelConfigMsg config[4];
} stimulationPkg_channelsConfigMsg;

typedef struct _stimulationPkg_directionControlMsg {
    bool has_burst;
    stimulationPkg_burstMsg burst;
    float gain;
    bool has_config;
    stimulationPkg_channelConfigMsg config;
    uint32_t topChannel;
    uint32_t bottomChannel;
    bool start;
} stimulationPkg_directionControlMsg;

typedef struct _stimulationPkg_autoStimulationMsg {
    uint32_t interval;
    uint32_t minInterval;
    uint32_t maxInterval;
    uint32_t restInterval;
    uint32_t restDuration;
    float leftMinAmp;
    float leftMaxAmp;
    float rightMinAmp;
    float rightMaxAmp;
    float forwardMinAmp;
    float forwardMaxAmp;
    bool intervalIsRandomized;
    float linearSpeedThreshold;
    float omegaThreshold01;
    float omegaThreshold02;
    float amplitudeStepUpRatio;
    float amplitudeStepDownRatio;
    float amplitudeReactivation;
    stimulationPkg_stiAlgoType algoType;
    float forwardProbability;
} stimulationPkg_autoStimulationMsg;

typedef struct _stimulationPkg_resetCfg {
    uint32_t imuGain;
} stimulationPkg_resetCfg;

typedef struct _stimulationPkg_stiInfo {
    float batteryVoltage;
    float leftTurnVoltage;
    float rightTurnVoltage;
    float forwardVoltage;
    uint32_t stiType;
} stimulationPkg_stiInfo;

typedef struct _stimulationPkg_volRangeForward {
    uint32_t durationSecond;
    float minVol;
    float maxVol;
} stimulationPkg_volRangeForward;

typedef struct _stimulationPkg_volRangeForwardMsg {
    pb_size_t range_count;
    stimulationPkg_volRangeForward range[5];
    uint32_t startIdx;
    bool needReset;
} stimulationPkg_volRangeForwardMsg;

typedef struct _stimulationPkg_stimulationMsg {
    pb_size_t which_type;
    union {
        stimulationPkg_channelsConfigMsg channelsConfig;
        stimulationPkg_autoStimulationMsg autoStiCfg;
        bool resetState;
        bool autoSti;
        stimulationPkg_directionControlMsg turnRight;
        stimulationPkg_directionControlMsg turnLeft;
        stimulationPkg_directionControlMsg moveForward;
        bool stopSti;
        stimulationPkg_stiInfo stiInfo;
        stimulationPkg_volRangeForwardMsg volRangeForwardMsg;
    } type;
} stimulationPkg_stimulationMsg;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _stimulationPkg_stiAlgoType_MIN stimulationPkg_stiAlgoType_FIXED_VOLTAGE
#define _stimulationPkg_stiAlgoType_MAX stimulationPkg_stiAlgoType_SPEED_BASED_REGULATOR
#define _stimulationPkg_stiAlgoType_ARRAYSIZE ((stimulationPkg_stiAlgoType)(stimulationPkg_stiAlgoType_SPEED_BASED_REGULATOR+1))





#define stimulationPkg_autoStimulationMsg_algoType_ENUMTYPE stimulationPkg_stiAlgoType







/* Initializer values for message structs */
#define stimulationPkg_channelConfigMsg_init_default {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define stimulationPkg_burstMsg_init_default     {0}
#define stimulationPkg_channelsConfigMsg_init_default {0, 0, false, stimulationPkg_burstMsg_init_default, 0, {stimulationPkg_channelConfigMsg_init_default, stimulationPkg_channelConfigMsg_init_default, stimulationPkg_channelConfigMsg_init_default, stimulationPkg_channelConfigMsg_init_default}}
#define stimulationPkg_directionControlMsg_init_default {false, stimulationPkg_burstMsg_init_default, 0, false, stimulationPkg_channelConfigMsg_init_default, 0, 0, 0}
#define stimulationPkg_autoStimulationMsg_init_default {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, _stimulationPkg_stiAlgoType_MIN, 0}
#define stimulationPkg_resetCfg_init_default     {0}
#define stimulationPkg_stiInfo_init_default      {0, 0, 0, 0, 0}
#define stimulationPkg_volRangeForward_init_default {0, 0, 0}
#define stimulationPkg_volRangeForwardMsg_init_default {0, {stimulationPkg_volRangeForward_init_default, stimulationPkg_volRangeForward_init_default, stimulationPkg_volRangeForward_init_default, stimulationPkg_volRangeForward_init_default, stimulationPkg_volRangeForward_init_default}, 0, 0}
#define stimulationPkg_stimulationMsg_init_default {0, {stimulationPkg_channelsConfigMsg_init_default}}
#define stimulationPkg_channelConfigMsg_init_zero {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define stimulationPkg_burstMsg_init_zero        {0}
#define stimulationPkg_channelsConfigMsg_init_zero {0, 0, false, stimulationPkg_burstMsg_init_zero, 0, {stimulationPkg_channelConfigMsg_init_zero, stimulationPkg_channelConfigMsg_init_zero, stimulationPkg_channelConfigMsg_init_zero, stimulationPkg_channelConfigMsg_init_zero}}
#define stimulationPkg_directionControlMsg_init_zero {false, stimulationPkg_burstMsg_init_zero, 0, false, stimulationPkg_channelConfigMsg_init_zero, 0, 0, 0}
#define stimulationPkg_autoStimulationMsg_init_zero {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, _stimulationPkg_stiAlgoType_MIN, 0}
#define stimulationPkg_resetCfg_init_zero        {0}
#define stimulationPkg_stiInfo_init_zero         {0, 0, 0, 0, 0}
#define stimulationPkg_volRangeForward_init_zero {0, 0, 0}
#define stimulationPkg_volRangeForwardMsg_init_zero {0, {stimulationPkg_volRangeForward_init_zero, stimulationPkg_volRangeForward_init_zero, stimulationPkg_volRangeForward_init_zero, stimulationPkg_volRangeForward_init_zero, stimulationPkg_volRangeForward_init_zero}, 0, 0}
#define stimulationPkg_stimulationMsg_init_zero  {0, {stimulationPkg_channelsConfigMsg_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define stimulationPkg_channelConfigMsg_enable_tag 1
#define stimulationPkg_channelConfigMsg_duration_tag 2
#define stimulationPkg_channelConfigMsg_ton1_tag 3
#define stimulationPkg_channelConfigMsg_toff1_tag 4
#define stimulationPkg_channelConfigMsg_ton2_tag 5
#define stimulationPkg_channelConfigMsg_toff2_tag 6
#define stimulationPkg_channelConfigMsg_cycle_tag 7
#define stimulationPkg_channelConfigMsg_rest_tag 8
#define stimulationPkg_channelConfigMsg_amp_tag  9
#define stimulationPkg_channelConfigMsg_chId_tag 10
#define stimulationPkg_burstMsg_enable_tag       1
#define stimulationPkg_channelsConfigMsg_stiStartStop_tag 1
#define stimulationPkg_channelsConfigMsg_gain_tag 2
#define stimulationPkg_channelsConfigMsg_burst_tag 4
#define stimulationPkg_channelsConfigMsg_config_tag 5
#define stimulationPkg_directionControlMsg_burst_tag 1
#define stimulationPkg_directionControlMsg_gain_tag 2
#define stimulationPkg_directionControlMsg_config_tag 3
#define stimulationPkg_directionControlMsg_topChannel_tag 4
#define stimulationPkg_directionControlMsg_bottomChannel_tag 5
#define stimulationPkg_directionControlMsg_start_tag 6
#define stimulationPkg_autoStimulationMsg_interval_tag 1
#define stimulationPkg_autoStimulationMsg_minInterval_tag 2
#define stimulationPkg_autoStimulationMsg_maxInterval_tag 3
#define stimulationPkg_autoStimulationMsg_restInterval_tag 4
#define stimulationPkg_autoStimulationMsg_restDuration_tag 5
#define stimulationPkg_autoStimulationMsg_leftMinAmp_tag 6
#define stimulationPkg_autoStimulationMsg_leftMaxAmp_tag 7
#define stimulationPkg_autoStimulationMsg_rightMinAmp_tag 8
#define stimulationPkg_autoStimulationMsg_rightMaxAmp_tag 9
#define stimulationPkg_autoStimulationMsg_forwardMinAmp_tag 10
#define stimulationPkg_autoStimulationMsg_forwardMaxAmp_tag 11
#define stimulationPkg_autoStimulationMsg_intervalIsRandomized_tag 12
#define stimulationPkg_autoStimulationMsg_linearSpeedThreshold_tag 13
#define stimulationPkg_autoStimulationMsg_omegaThreshold01_tag 14
#define stimulationPkg_autoStimulationMsg_omegaThreshold02_tag 15
#define stimulationPkg_autoStimulationMsg_amplitudeStepUpRatio_tag 16
#define stimulationPkg_autoStimulationMsg_amplitudeStepDownRatio_tag 17
#define stimulationPkg_autoStimulationMsg_amplitudeReactivation_tag 18
#define stimulationPkg_autoStimulationMsg_algoType_tag 19
#define stimulationPkg_autoStimulationMsg_forwardProbability_tag 20
#define stimulationPkg_resetCfg_imuGain_tag      1
#define stimulationPkg_stiInfo_batteryVoltage_tag 1
#define stimulationPkg_stiInfo_leftTurnVoltage_tag 2
#define stimulationPkg_stiInfo_rightTurnVoltage_tag 3
#define stimulationPkg_stiInfo_forwardVoltage_tag 4
#define stimulationPkg_stiInfo_stiType_tag       5
#define stimulationPkg_volRangeForward_durationSecond_tag 1
#define stimulationPkg_volRangeForward_minVol_tag 2
#define stimulationPkg_volRangeForward_maxVol_tag 3
#define stimulationPkg_volRangeForwardMsg_range_tag 1
#define stimulationPkg_volRangeForwardMsg_startIdx_tag 2
#define stimulationPkg_volRangeForwardMsg_needReset_tag 3
#define stimulationPkg_stimulationMsg_channelsConfig_tag 1
#define stimulationPkg_stimulationMsg_autoStiCfg_tag 2
#define stimulationPkg_stimulationMsg_resetState_tag 3
#define stimulationPkg_stimulationMsg_autoSti_tag 4
#define stimulationPkg_stimulationMsg_turnRight_tag 5
#define stimulationPkg_stimulationMsg_turnLeft_tag 6
#define stimulationPkg_stimulationMsg_moveForward_tag 7
#define stimulationPkg_stimulationMsg_stopSti_tag 8
#define stimulationPkg_stimulationMsg_stiInfo_tag 9
#define stimulationPkg_stimulationMsg_volRangeForwardMsg_tag 10

/* Struct field encoding specification for nanopb */
#define stimulationPkg_channelConfigMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     enable,            1) \
X(a, STATIC,   SINGULAR, UINT32,   duration,          2) \
X(a, STATIC,   SINGULAR, UINT32,   ton1,              3) \
X(a, STATIC,   SINGULAR, UINT32,   toff1,             4) \
X(a, STATIC,   SINGULAR, UINT32,   ton2,              5) \
X(a, STATIC,   SINGULAR, UINT32,   toff2,             6) \
X(a, STATIC,   SINGULAR, UINT32,   cycle,             7) \
X(a, STATIC,   SINGULAR, UINT32,   rest,              8) \
X(a, STATIC,   SINGULAR, FLOAT,    amp,               9) \
X(a, STATIC,   SINGULAR, UINT32,   chId,             10)
#define stimulationPkg_channelConfigMsg_CALLBACK NULL
#define stimulationPkg_channelConfigMsg_DEFAULT NULL

#define stimulationPkg_burstMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     enable,            1)
#define stimulationPkg_burstMsg_CALLBACK NULL
#define stimulationPkg_burstMsg_DEFAULT NULL

#define stimulationPkg_channelsConfigMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     stiStartStop,      1) \
X(a, STATIC,   SINGULAR, FLOAT,    gain,              2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  burst,             4) \
X(a, STATIC,   REPEATED, MESSAGE,  config,            5)
#define stimulationPkg_channelsConfigMsg_CALLBACK NULL
#define stimulationPkg_channelsConfigMsg_DEFAULT NULL
#define stimulationPkg_channelsConfigMsg_burst_MSGTYPE stimulationPkg_burstMsg
#define stimulationPkg_channelsConfigMsg_config_MSGTYPE stimulationPkg_channelConfigMsg

#define stimulationPkg_directionControlMsg_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  burst,             1) \
X(a, STATIC,   SINGULAR, FLOAT,    gain,              2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  config,            3) \
X(a, STATIC,   SINGULAR, UINT32,   topChannel,        4) \
X(a, STATIC,   SINGULAR, UINT32,   bottomChannel,     5) \
X(a, STATIC,   SINGULAR, BOOL,     start,             6)
#define stimulationPkg_directionControlMsg_CALLBACK NULL
#define stimulationPkg_directionControlMsg_DEFAULT NULL
#define stimulationPkg_directionControlMsg_burst_MSGTYPE stimulationPkg_burstMsg
#define stimulationPkg_directionControlMsg_config_MSGTYPE stimulationPkg_channelConfigMsg

#define stimulationPkg_autoStimulationMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   interval,          1) \
X(a, STATIC,   SINGULAR, UINT32,   minInterval,       2) \
X(a, STATIC,   SINGULAR, UINT32,   maxInterval,       3) \
X(a, STATIC,   SINGULAR, UINT32,   restInterval,      4) \
X(a, STATIC,   SINGULAR, UINT32,   restDuration,      5) \
X(a, STATIC,   SINGULAR, FLOAT,    leftMinAmp,        6) \
X(a, STATIC,   SINGULAR, FLOAT,    leftMaxAmp,        7) \
X(a, STATIC,   SINGULAR, FLOAT,    rightMinAmp,       8) \
X(a, STATIC,   SINGULAR, FLOAT,    rightMaxAmp,       9) \
X(a, STATIC,   SINGULAR, FLOAT,    forwardMinAmp,    10) \
X(a, STATIC,   SINGULAR, FLOAT,    forwardMaxAmp,    11) \
X(a, STATIC,   SINGULAR, BOOL,     intervalIsRandomized,  12) \
X(a, STATIC,   SINGULAR, FLOAT,    linearSpeedThreshold,  13) \
X(a, STATIC,   SINGULAR, FLOAT,    omegaThreshold01,  14) \
X(a, STATIC,   SINGULAR, FLOAT,    omegaThreshold02,  15) \
X(a, STATIC,   SINGULAR, FLOAT,    amplitudeStepUpRatio,  16) \
X(a, STATIC,   SINGULAR, FLOAT,    amplitudeStepDownRatio,  17) \
X(a, STATIC,   SINGULAR, FLOAT,    amplitudeReactivation,  18) \
X(a, STATIC,   SINGULAR, UENUM,    algoType,         19) \
X(a, STATIC,   SINGULAR, FLOAT,    forwardProbability,  20)
#define stimulationPkg_autoStimulationMsg_CALLBACK NULL
#define stimulationPkg_autoStimulationMsg_DEFAULT NULL

#define stimulationPkg_resetCfg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   imuGain,           1)
#define stimulationPkg_resetCfg_CALLBACK NULL
#define stimulationPkg_resetCfg_DEFAULT NULL

#define stimulationPkg_stiInfo_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    batteryVoltage,    1) \
X(a, STATIC,   SINGULAR, FLOAT,    leftTurnVoltage,   2) \
X(a, STATIC,   SINGULAR, FLOAT,    rightTurnVoltage,   3) \
X(a, STATIC,   SINGULAR, FLOAT,    forwardVoltage,    4) \
X(a, STATIC,   SINGULAR, UINT32,   stiType,           5)
#define stimulationPkg_stiInfo_CALLBACK NULL
#define stimulationPkg_stiInfo_DEFAULT NULL

#define stimulationPkg_volRangeForward_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   durationSecond,    1) \
X(a, STATIC,   SINGULAR, FLOAT,    minVol,            2) \
X(a, STATIC,   SINGULAR, FLOAT,    maxVol,            3)
#define stimulationPkg_volRangeForward_CALLBACK NULL
#define stimulationPkg_volRangeForward_DEFAULT NULL

#define stimulationPkg_volRangeForwardMsg_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, MESSAGE,  range,             1) \
X(a, STATIC,   SINGULAR, UINT32,   startIdx,          2) \
X(a, STATIC,   SINGULAR, BOOL,     needReset,         3)
#define stimulationPkg_volRangeForwardMsg_CALLBACK NULL
#define stimulationPkg_volRangeForwardMsg_DEFAULT NULL
#define stimulationPkg_volRangeForwardMsg_range_MSGTYPE stimulationPkg_volRangeForward

#define stimulationPkg_stimulationMsg_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,channelsConfig,type.channelsConfig),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,autoStiCfg,type.autoStiCfg),   2) \
X(a, STATIC,   ONEOF,    BOOL,     (type,resetState,type.resetState),   3) \
X(a, STATIC,   ONEOF,    BOOL,     (type,autoSti,type.autoSti),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,turnRight,type.turnRight),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,turnLeft,type.turnLeft),   6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,moveForward,type.moveForward),   7) \
X(a, STATIC,   ONEOF,    BOOL,     (type,stopSti,type.stopSti),   8) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,stiInfo,type.stiInfo),   9) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,volRangeForwardMsg,type.volRangeForwardMsg),  10)
#define stimulationPkg_stimulationMsg_CALLBACK NULL
#define stimulationPkg_stimulationMsg_DEFAULT NULL
#define stimulationPkg_stimulationMsg_type_channelsConfig_MSGTYPE stimulationPkg_channelsConfigMsg
#define stimulationPkg_stimulationMsg_type_autoStiCfg_MSGTYPE stimulationPkg_autoStimulationMsg
#define stimulationPkg_stimulationMsg_type_turnRight_MSGTYPE stimulationPkg_directionControlMsg
#define stimulationPkg_stimulationMsg_type_turnLeft_MSGTYPE stimulationPkg_directionControlMsg
#define stimulationPkg_stimulationMsg_type_moveForward_MSGTYPE stimulationPkg_directionControlMsg
#define stimulationPkg_stimulationMsg_type_stiInfo_MSGTYPE stimulationPkg_stiInfo
#define stimulationPkg_stimulationMsg_type_volRangeForwardMsg_MSGTYPE stimulationPkg_volRangeForwardMsg

extern const pb_msgdesc_t stimulationPkg_channelConfigMsg_msg;
extern const pb_msgdesc_t stimulationPkg_burstMsg_msg;
extern const pb_msgdesc_t stimulationPkg_channelsConfigMsg_msg;
extern const pb_msgdesc_t stimulationPkg_directionControlMsg_msg;
extern const pb_msgdesc_t stimulationPkg_autoStimulationMsg_msg;
extern const pb_msgdesc_t stimulationPkg_resetCfg_msg;
extern const pb_msgdesc_t stimulationPkg_stiInfo_msg;
extern const pb_msgdesc_t stimulationPkg_volRangeForward_msg;
extern const pb_msgdesc_t stimulationPkg_volRangeForwardMsg_msg;
extern const pb_msgdesc_t stimulationPkg_stimulationMsg_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define stimulationPkg_channelConfigMsg_fields &stimulationPkg_channelConfigMsg_msg
#define stimulationPkg_burstMsg_fields &stimulationPkg_burstMsg_msg
#define stimulationPkg_channelsConfigMsg_fields &stimulationPkg_channelsConfigMsg_msg
#define stimulationPkg_directionControlMsg_fields &stimulationPkg_directionControlMsg_msg
#define stimulationPkg_autoStimulationMsg_fields &stimulationPkg_autoStimulationMsg_msg
#define stimulationPkg_resetCfg_fields &stimulationPkg_resetCfg_msg
#define stimulationPkg_stiInfo_fields &stimulationPkg_stiInfo_msg
#define stimulationPkg_volRangeForward_fields &stimulationPkg_volRangeForward_msg
#define stimulationPkg_volRangeForwardMsg_fields &stimulationPkg_volRangeForwardMsg_msg
#define stimulationPkg_stimulationMsg_fields &stimulationPkg_stimulationMsg_msg

/* Maximum encoded size of messages (where known) */
#define stimulationPkg_autoStimulationMsg_size   104
#define stimulationPkg_burstMsg_size             2
#define stimulationPkg_channelConfigMsg_size     55
#define stimulationPkg_channelsConfigMsg_size    239
#define stimulationPkg_directionControlMsg_size  80
#define stimulationPkg_resetCfg_size             6
#define stimulationPkg_stiInfo_size              26
#define stimulationPkg_stimulationMsg_size       242
#define stimulationPkg_volRangeForwardMsg_size   98
#define stimulationPkg_volRangeForward_size      16

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
