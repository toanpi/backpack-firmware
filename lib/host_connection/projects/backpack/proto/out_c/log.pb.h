/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_LOGPKG_LOG_PB_H_INCLUDED
#define PB_LOGPKG_LOG_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _LogPkg_LogManager {
    pb_callback_t msg;
} LogPkg_LogManager;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define LogPkg_LogManager_init_default           {{{NULL}, NULL}}
#define LogPkg_LogManager_init_zero              {{{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define LogPkg_LogManager_msg_tag                1

/* Struct field encoding specification for nanopb */
#define LogPkg_LogManager_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   msg,               1)
#define LogPkg_LogManager_CALLBACK pb_default_field_callback
#define LogPkg_LogManager_DEFAULT NULL

extern const pb_msgdesc_t LogPkg_LogManager_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define LogPkg_LogManager_fields &LogPkg_LogManager_msg

/* Maximum encoded size of messages (where known) */
/* LogPkg_LogManager_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
