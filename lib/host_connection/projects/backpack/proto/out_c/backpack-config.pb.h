/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_BACKPACKCONFIGPKG_BACKPACK_CONFIG_PB_H_INCLUDED
#define PB_BACKPACKCONFIGPKG_BACKPACK_CONFIG_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* ******************************************************************************
  BACKPACK CONFIG MESSENGER
****************************************************************************** */
typedef struct _backpackConfigPkg_channelConfigMsg {
    bool enable;
    uint32_t duration;
    uint32_t ton1;
    uint32_t toff1;
    uint32_t ton2;
    uint32_t toff2;
    uint32_t cycle;
    uint32_t rest;
    uint32_t amp;
} backpackConfigPkg_channelConfigMsg;

typedef struct _backpackConfigPkg_channelsConfigMsg {
    bool StiStartstop;
    uint32_t gain;
    uint32_t command;
    pb_size_t config_count;
    backpackConfigPkg_channelConfigMsg config[4];
} backpackConfigPkg_channelsConfigMsg;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define backpackConfigPkg_channelConfigMsg_init_default {0, 0, 0, 0, 0, 0, 0, 0, 0}
#define backpackConfigPkg_channelsConfigMsg_init_default {0, 0, 0, 0, {backpackConfigPkg_channelConfigMsg_init_default, backpackConfigPkg_channelConfigMsg_init_default, backpackConfigPkg_channelConfigMsg_init_default, backpackConfigPkg_channelConfigMsg_init_default}}
#define backpackConfigPkg_channelConfigMsg_init_zero {0, 0, 0, 0, 0, 0, 0, 0, 0}
#define backpackConfigPkg_channelsConfigMsg_init_zero {0, 0, 0, 0, {backpackConfigPkg_channelConfigMsg_init_zero, backpackConfigPkg_channelConfigMsg_init_zero, backpackConfigPkg_channelConfigMsg_init_zero, backpackConfigPkg_channelConfigMsg_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define backpackConfigPkg_channelConfigMsg_enable_tag 1
#define backpackConfigPkg_channelConfigMsg_duration_tag 2
#define backpackConfigPkg_channelConfigMsg_ton1_tag 3
#define backpackConfigPkg_channelConfigMsg_toff1_tag 4
#define backpackConfigPkg_channelConfigMsg_ton2_tag 5
#define backpackConfigPkg_channelConfigMsg_toff2_tag 6
#define backpackConfigPkg_channelConfigMsg_cycle_tag 7
#define backpackConfigPkg_channelConfigMsg_rest_tag 8
#define backpackConfigPkg_channelConfigMsg_amp_tag 9
#define backpackConfigPkg_channelsConfigMsg_StiStartstop_tag 1
#define backpackConfigPkg_channelsConfigMsg_gain_tag 2
#define backpackConfigPkg_channelsConfigMsg_command_tag 3
#define backpackConfigPkg_channelsConfigMsg_config_tag 4

/* Struct field encoding specification for nanopb */
#define backpackConfigPkg_channelConfigMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     enable,            1) \
X(a, STATIC,   SINGULAR, UINT32,   duration,          2) \
X(a, STATIC,   SINGULAR, UINT32,   ton1,              3) \
X(a, STATIC,   SINGULAR, UINT32,   toff1,             4) \
X(a, STATIC,   SINGULAR, UINT32,   ton2,              5) \
X(a, STATIC,   SINGULAR, UINT32,   toff2,             6) \
X(a, STATIC,   SINGULAR, UINT32,   cycle,             7) \
X(a, STATIC,   SINGULAR, UINT32,   rest,              8) \
X(a, STATIC,   SINGULAR, UINT32,   amp,               9)
#define backpackConfigPkg_channelConfigMsg_CALLBACK NULL
#define backpackConfigPkg_channelConfigMsg_DEFAULT NULL

#define backpackConfigPkg_channelsConfigMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     StiStartstop,      1) \
X(a, STATIC,   SINGULAR, UINT32,   gain,              2) \
X(a, STATIC,   SINGULAR, UINT32,   command,           3) \
X(a, STATIC,   REPEATED, MESSAGE,  config,            4)
#define backpackConfigPkg_channelsConfigMsg_CALLBACK NULL
#define backpackConfigPkg_channelsConfigMsg_DEFAULT NULL
#define backpackConfigPkg_channelsConfigMsg_config_MSGTYPE backpackConfigPkg_channelConfigMsg

extern const pb_msgdesc_t backpackConfigPkg_channelConfigMsg_msg;
extern const pb_msgdesc_t backpackConfigPkg_channelsConfigMsg_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define backpackConfigPkg_channelConfigMsg_fields &backpackConfigPkg_channelConfigMsg_msg
#define backpackConfigPkg_channelsConfigMsg_fields &backpackConfigPkg_channelsConfigMsg_msg

/* Maximum encoded size of messages (where known) */
#define backpackConfigPkg_channelConfigMsg_size  50
#define backpackConfigPkg_channelsConfigMsg_size 222

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
