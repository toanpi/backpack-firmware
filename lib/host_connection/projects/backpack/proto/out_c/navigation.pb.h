/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_NAVIGATIONPKG_NAVIGATION_PB_H_INCLUDED
#define PB_NAVIGATIONPKG_NAVIGATION_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _navigationPkg_linearSpeedType {
    navigationPkg_linearSpeedType_LINEAR_VICON = 0,
    navigationPkg_linearSpeedType_LINEAR_IMU = 1
} navigationPkg_linearSpeedType;

typedef enum _navigationPkg_angleSpeedType {
    navigationPkg_angleSpeedType_ANGLE_VICON = 0,
    navigationPkg_angleSpeedType_ANGLE_IMU = 1
} navigationPkg_angleSpeedType;

/* Struct definitions */
typedef struct _navigationPkg_paramMsg {
    float angle;
    float distance;
    uint32_t forwardTime;
    /* Free Walk Time */
    uint32_t freeTime;
    uint32_t longStimulus;
    uint32_t longStimulusForwardTime;
    uint32_t longStimulusFreeTime;
    uint32_t controlRate;
    /* Setup duration to check speed */
    uint32_t speedDuration;
    /* Setup threshold of linear speed */
    float linearSpeedThreshold;
    /* Setup time to for calculate speed (window time for using moving average) */
    float speedStore;
    /* Setup the allowance of freewalk after steering */
    bool allowFreeWalkAfterSteering;
    /* Setup the time for freewalk after steering */
    uint32_t freeTimeAfterSteering;
    /* Setup final part of long stimulus */
    uint32_t longStimulusFreeTime2;
    /* Setup threshold of angular speed */
    float angularSpeedThreshold;
    /* Setup escape mode */
    bool useEscapeMode;
    /* Setup time alow the cockroach to response to the stimulation before speed calculation */
    uint32_t reactionTime;
    /* Setup method to calculate angular speed */
    uint32_t angularSpeedMethod;
    /* Would we use IMU to calculate linear speed */
    navigationPkg_linearSpeedType linearSpeed;
    /* Would we use IMU to calculate angular speed */
    navigationPkg_angleSpeedType angularSpeed;
} navigationPkg_paramMsg;

/* There were 8 targets sent to the wireless board
 In this version, the number of targets is reduced to 1 */
typedef struct _navigationPkg_cordinate {
    float x;
    float y;
} navigationPkg_cordinate;

typedef struct _navigationPkg_target {
    pb_size_t target_count;
    navigationPkg_cordinate target[8];
} navigationPkg_target;

typedef struct _navigationPkg_seeking {
    float step1;
    float step2;
    float minTemp;
    float maxTemp;
    float numberPixelToStart;
    float maxMedian;
    float humanNumberOfPixelToStart;
    float xmin;
    float xmax;
    float ymin;
    float ymax;
    float levyMin;
    float levyMax;
    float humanAdditionalStep;
} navigationPkg_seeking;

typedef struct _navigationPkg_position {
    float x;
    float y;
    float z;
} navigationPkg_position;

typedef struct _navigationPkg_autoNav {
    bool isTheRoachConfined;
    bool has_robotHeadPos;
    navigationPkg_position robotHeadPos;
    bool has_robotTailPos;
    navigationPkg_position robotTailPos;
    uint32_t frameNumber;
} navigationPkg_autoNav;

typedef struct _navigationPkg_levyStatus {
    uint32_t levyWalkTurn;
    uint32_t frameNumber;
    float levyWalkForwardVelocityVicon;
    float levyWalkAngularVelocityVicon;
    pb_size_t levyWalkTarget_count;
    navigationPkg_position levyWalkTarget[2];
    bool has_levyWalkTargetCurrent;
    navigationPkg_position levyWalkTargetCurrent;
    float seekingAlpha;
    float seekingGama;
    float seekingBeta;
    uint32_t seekingNumberPixelInRange;
} navigationPkg_levyStatus;

typedef struct _navigationPkg_navigationMsg {
    pb_size_t which_type;
    union {
        navigationPkg_paramMsg paramCfg;
        navigationPkg_target targetSet;
        bool stopNav;
        navigationPkg_seeking seekingCfg;
        navigationPkg_levyStatus levyStatus;
        navigationPkg_autoNav autoNavCfg;
        bool loadState;
    } type;
} navigationPkg_navigationMsg;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _navigationPkg_linearSpeedType_MIN navigationPkg_linearSpeedType_LINEAR_VICON
#define _navigationPkg_linearSpeedType_MAX navigationPkg_linearSpeedType_LINEAR_IMU
#define _navigationPkg_linearSpeedType_ARRAYSIZE ((navigationPkg_linearSpeedType)(navigationPkg_linearSpeedType_LINEAR_IMU+1))

#define _navigationPkg_angleSpeedType_MIN navigationPkg_angleSpeedType_ANGLE_VICON
#define _navigationPkg_angleSpeedType_MAX navigationPkg_angleSpeedType_ANGLE_IMU
#define _navigationPkg_angleSpeedType_ARRAYSIZE ((navigationPkg_angleSpeedType)(navigationPkg_angleSpeedType_ANGLE_IMU+1))

#define navigationPkg_paramMsg_linearSpeed_ENUMTYPE navigationPkg_linearSpeedType
#define navigationPkg_paramMsg_angularSpeed_ENUMTYPE navigationPkg_angleSpeedType









/* Initializer values for message structs */
#define navigationPkg_paramMsg_init_default      {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, _navigationPkg_linearSpeedType_MIN, _navigationPkg_angleSpeedType_MIN}
#define navigationPkg_cordinate_init_default     {0, 0}
#define navigationPkg_target_init_default        {0, {navigationPkg_cordinate_init_default, navigationPkg_cordinate_init_default, navigationPkg_cordinate_init_default, navigationPkg_cordinate_init_default, navigationPkg_cordinate_init_default, navigationPkg_cordinate_init_default, navigationPkg_cordinate_init_default, navigationPkg_cordinate_init_default}}
#define navigationPkg_seeking_init_default       {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define navigationPkg_position_init_default      {0, 0, 0}
#define navigationPkg_autoNav_init_default       {0, false, navigationPkg_position_init_default, false, navigationPkg_position_init_default, 0}
#define navigationPkg_levyStatus_init_default    {0, 0, 0, 0, 0, {navigationPkg_position_init_default, navigationPkg_position_init_default}, false, navigationPkg_position_init_default, 0, 0, 0, 0}
#define navigationPkg_navigationMsg_init_default {0, {navigationPkg_paramMsg_init_default}}
#define navigationPkg_paramMsg_init_zero         {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, _navigationPkg_linearSpeedType_MIN, _navigationPkg_angleSpeedType_MIN}
#define navigationPkg_cordinate_init_zero        {0, 0}
#define navigationPkg_target_init_zero           {0, {navigationPkg_cordinate_init_zero, navigationPkg_cordinate_init_zero, navigationPkg_cordinate_init_zero, navigationPkg_cordinate_init_zero, navigationPkg_cordinate_init_zero, navigationPkg_cordinate_init_zero, navigationPkg_cordinate_init_zero, navigationPkg_cordinate_init_zero}}
#define navigationPkg_seeking_init_zero          {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define navigationPkg_position_init_zero         {0, 0, 0}
#define navigationPkg_autoNav_init_zero          {0, false, navigationPkg_position_init_zero, false, navigationPkg_position_init_zero, 0}
#define navigationPkg_levyStatus_init_zero       {0, 0, 0, 0, 0, {navigationPkg_position_init_zero, navigationPkg_position_init_zero}, false, navigationPkg_position_init_zero, 0, 0, 0, 0}
#define navigationPkg_navigationMsg_init_zero    {0, {navigationPkg_paramMsg_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define navigationPkg_paramMsg_angle_tag         1
#define navigationPkg_paramMsg_distance_tag      2
#define navigationPkg_paramMsg_forwardTime_tag   3
#define navigationPkg_paramMsg_freeTime_tag      4
#define navigationPkg_paramMsg_longStimulus_tag  5
#define navigationPkg_paramMsg_longStimulusForwardTime_tag 6
#define navigationPkg_paramMsg_longStimulusFreeTime_tag 7
#define navigationPkg_paramMsg_controlRate_tag   8
#define navigationPkg_paramMsg_speedDuration_tag 9
#define navigationPkg_paramMsg_linearSpeedThreshold_tag 10
#define navigationPkg_paramMsg_speedStore_tag    11
#define navigationPkg_paramMsg_allowFreeWalkAfterSteering_tag 12
#define navigationPkg_paramMsg_freeTimeAfterSteering_tag 13
#define navigationPkg_paramMsg_longStimulusFreeTime2_tag 14
#define navigationPkg_paramMsg_angularSpeedThreshold_tag 15
#define navigationPkg_paramMsg_useEscapeMode_tag 16
#define navigationPkg_paramMsg_reactionTime_tag  17
#define navigationPkg_paramMsg_angularSpeedMethod_tag 18
#define navigationPkg_paramMsg_linearSpeed_tag   19
#define navigationPkg_paramMsg_angularSpeed_tag  20
#define navigationPkg_cordinate_x_tag            1
#define navigationPkg_cordinate_y_tag            2
#define navigationPkg_target_target_tag          1
#define navigationPkg_seeking_step1_tag          1
#define navigationPkg_seeking_step2_tag          2
#define navigationPkg_seeking_minTemp_tag        3
#define navigationPkg_seeking_maxTemp_tag        4
#define navigationPkg_seeking_numberPixelToStart_tag 8
#define navigationPkg_seeking_maxMedian_tag      10
#define navigationPkg_seeking_humanNumberOfPixelToStart_tag 11
#define navigationPkg_seeking_xmin_tag           12
#define navigationPkg_seeking_xmax_tag           13
#define navigationPkg_seeking_ymin_tag           14
#define navigationPkg_seeking_ymax_tag           15
#define navigationPkg_seeking_levyMin_tag        16
#define navigationPkg_seeking_levyMax_tag        17
#define navigationPkg_seeking_humanAdditionalStep_tag 18
#define navigationPkg_position_x_tag             1
#define navigationPkg_position_y_tag             2
#define navigationPkg_position_z_tag             3
#define navigationPkg_autoNav_isTheRoachConfined_tag 1
#define navigationPkg_autoNav_robotHeadPos_tag   2
#define navigationPkg_autoNav_robotTailPos_tag   3
#define navigationPkg_autoNav_frameNumber_tag    4
#define navigationPkg_levyStatus_levyWalkTurn_tag 1
#define navigationPkg_levyStatus_frameNumber_tag 2
#define navigationPkg_levyStatus_levyWalkForwardVelocityVicon_tag 3
#define navigationPkg_levyStatus_levyWalkAngularVelocityVicon_tag 4
#define navigationPkg_levyStatus_levyWalkTarget_tag 5
#define navigationPkg_levyStatus_levyWalkTargetCurrent_tag 6
#define navigationPkg_levyStatus_seekingAlpha_tag 7
#define navigationPkg_levyStatus_seekingGama_tag 8
#define navigationPkg_levyStatus_seekingBeta_tag 9
#define navigationPkg_levyStatus_seekingNumberPixelInRange_tag 10
#define navigationPkg_navigationMsg_paramCfg_tag 1
#define navigationPkg_navigationMsg_targetSet_tag 2
#define navigationPkg_navigationMsg_stopNav_tag  3
#define navigationPkg_navigationMsg_seekingCfg_tag 4
#define navigationPkg_navigationMsg_levyStatus_tag 5
#define navigationPkg_navigationMsg_autoNavCfg_tag 6
#define navigationPkg_navigationMsg_loadState_tag 7

/* Struct field encoding specification for nanopb */
#define navigationPkg_paramMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    angle,             1) \
X(a, STATIC,   SINGULAR, FLOAT,    distance,          2) \
X(a, STATIC,   SINGULAR, UINT32,   forwardTime,       3) \
X(a, STATIC,   SINGULAR, UINT32,   freeTime,          4) \
X(a, STATIC,   SINGULAR, UINT32,   longStimulus,      5) \
X(a, STATIC,   SINGULAR, UINT32,   longStimulusForwardTime,   6) \
X(a, STATIC,   SINGULAR, UINT32,   longStimulusFreeTime,   7) \
X(a, STATIC,   SINGULAR, UINT32,   controlRate,       8) \
X(a, STATIC,   SINGULAR, UINT32,   speedDuration,     9) \
X(a, STATIC,   SINGULAR, FLOAT,    linearSpeedThreshold,  10) \
X(a, STATIC,   SINGULAR, FLOAT,    speedStore,       11) \
X(a, STATIC,   SINGULAR, BOOL,     allowFreeWalkAfterSteering,  12) \
X(a, STATIC,   SINGULAR, UINT32,   freeTimeAfterSteering,  13) \
X(a, STATIC,   SINGULAR, UINT32,   longStimulusFreeTime2,  14) \
X(a, STATIC,   SINGULAR, FLOAT,    angularSpeedThreshold,  15) \
X(a, STATIC,   SINGULAR, BOOL,     useEscapeMode,    16) \
X(a, STATIC,   SINGULAR, UINT32,   reactionTime,     17) \
X(a, STATIC,   SINGULAR, UINT32,   angularSpeedMethod,  18) \
X(a, STATIC,   SINGULAR, UENUM,    linearSpeed,      19) \
X(a, STATIC,   SINGULAR, UENUM,    angularSpeed,     20)
#define navigationPkg_paramMsg_CALLBACK NULL
#define navigationPkg_paramMsg_DEFAULT NULL

#define navigationPkg_cordinate_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    x,                 1) \
X(a, STATIC,   SINGULAR, FLOAT,    y,                 2)
#define navigationPkg_cordinate_CALLBACK NULL
#define navigationPkg_cordinate_DEFAULT NULL

#define navigationPkg_target_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, MESSAGE,  target,            1)
#define navigationPkg_target_CALLBACK NULL
#define navigationPkg_target_DEFAULT NULL
#define navigationPkg_target_target_MSGTYPE navigationPkg_cordinate

#define navigationPkg_seeking_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    step1,             1) \
X(a, STATIC,   SINGULAR, FLOAT,    step2,             2) \
X(a, STATIC,   SINGULAR, FLOAT,    minTemp,           3) \
X(a, STATIC,   SINGULAR, FLOAT,    maxTemp,           4) \
X(a, STATIC,   SINGULAR, FLOAT,    numberPixelToStart,   8) \
X(a, STATIC,   SINGULAR, FLOAT,    maxMedian,        10) \
X(a, STATIC,   SINGULAR, FLOAT,    humanNumberOfPixelToStart,  11) \
X(a, STATIC,   SINGULAR, FLOAT,    xmin,             12) \
X(a, STATIC,   SINGULAR, FLOAT,    xmax,             13) \
X(a, STATIC,   SINGULAR, FLOAT,    ymin,             14) \
X(a, STATIC,   SINGULAR, FLOAT,    ymax,             15) \
X(a, STATIC,   SINGULAR, FLOAT,    levyMin,          16) \
X(a, STATIC,   SINGULAR, FLOAT,    levyMax,          17) \
X(a, STATIC,   SINGULAR, FLOAT,    humanAdditionalStep,  18)
#define navigationPkg_seeking_CALLBACK NULL
#define navigationPkg_seeking_DEFAULT NULL

#define navigationPkg_position_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    x,                 1) \
X(a, STATIC,   SINGULAR, FLOAT,    y,                 2) \
X(a, STATIC,   SINGULAR, FLOAT,    z,                 3)
#define navigationPkg_position_CALLBACK NULL
#define navigationPkg_position_DEFAULT NULL

#define navigationPkg_autoNav_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     isTheRoachConfined,   1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  robotHeadPos,      2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  robotTailPos,      3) \
X(a, STATIC,   SINGULAR, UINT32,   frameNumber,       4)
#define navigationPkg_autoNav_CALLBACK NULL
#define navigationPkg_autoNav_DEFAULT NULL
#define navigationPkg_autoNav_robotHeadPos_MSGTYPE navigationPkg_position
#define navigationPkg_autoNav_robotTailPos_MSGTYPE navigationPkg_position

#define navigationPkg_levyStatus_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   levyWalkTurn,      1) \
X(a, STATIC,   SINGULAR, UINT32,   frameNumber,       2) \
X(a, STATIC,   SINGULAR, FLOAT,    levyWalkForwardVelocityVicon,   3) \
X(a, STATIC,   SINGULAR, FLOAT,    levyWalkAngularVelocityVicon,   4) \
X(a, STATIC,   REPEATED, MESSAGE,  levyWalkTarget,    5) \
X(a, STATIC,   OPTIONAL, MESSAGE,  levyWalkTargetCurrent,   6) \
X(a, STATIC,   SINGULAR, FLOAT,    seekingAlpha,      7) \
X(a, STATIC,   SINGULAR, FLOAT,    seekingGama,       8) \
X(a, STATIC,   SINGULAR, FLOAT,    seekingBeta,       9) \
X(a, STATIC,   SINGULAR, UINT32,   seekingNumberPixelInRange,  10)
#define navigationPkg_levyStatus_CALLBACK NULL
#define navigationPkg_levyStatus_DEFAULT NULL
#define navigationPkg_levyStatus_levyWalkTarget_MSGTYPE navigationPkg_position
#define navigationPkg_levyStatus_levyWalkTargetCurrent_MSGTYPE navigationPkg_position

#define navigationPkg_navigationMsg_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,paramCfg,type.paramCfg),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,targetSet,type.targetSet),   2) \
X(a, STATIC,   ONEOF,    BOOL,     (type,stopNav,type.stopNav),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,seekingCfg,type.seekingCfg),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,levyStatus,type.levyStatus),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,autoNavCfg,type.autoNavCfg),   6) \
X(a, STATIC,   ONEOF,    BOOL,     (type,loadState,type.loadState),   7)
#define navigationPkg_navigationMsg_CALLBACK NULL
#define navigationPkg_navigationMsg_DEFAULT NULL
#define navigationPkg_navigationMsg_type_paramCfg_MSGTYPE navigationPkg_paramMsg
#define navigationPkg_navigationMsg_type_targetSet_MSGTYPE navigationPkg_target
#define navigationPkg_navigationMsg_type_seekingCfg_MSGTYPE navigationPkg_seeking
#define navigationPkg_navigationMsg_type_levyStatus_MSGTYPE navigationPkg_levyStatus
#define navigationPkg_navigationMsg_type_autoNavCfg_MSGTYPE navigationPkg_autoNav

extern const pb_msgdesc_t navigationPkg_paramMsg_msg;
extern const pb_msgdesc_t navigationPkg_cordinate_msg;
extern const pb_msgdesc_t navigationPkg_target_msg;
extern const pb_msgdesc_t navigationPkg_seeking_msg;
extern const pb_msgdesc_t navigationPkg_position_msg;
extern const pb_msgdesc_t navigationPkg_autoNav_msg;
extern const pb_msgdesc_t navigationPkg_levyStatus_msg;
extern const pb_msgdesc_t navigationPkg_navigationMsg_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define navigationPkg_paramMsg_fields &navigationPkg_paramMsg_msg
#define navigationPkg_cordinate_fields &navigationPkg_cordinate_msg
#define navigationPkg_target_fields &navigationPkg_target_msg
#define navigationPkg_seeking_fields &navigationPkg_seeking_msg
#define navigationPkg_position_fields &navigationPkg_position_msg
#define navigationPkg_autoNav_fields &navigationPkg_autoNav_msg
#define navigationPkg_levyStatus_fields &navigationPkg_levyStatus_msg
#define navigationPkg_navigationMsg_fields &navigationPkg_navigationMsg_msg

/* Maximum encoded size of messages (where known) */
#define navigationPkg_autoNav_size               42
#define navigationPkg_cordinate_size             10
#define navigationPkg_levyStatus_size            94
#define navigationPkg_navigationMsg_size         106
#define navigationPkg_paramMsg_size              104
#define navigationPkg_position_size              15
#define navigationPkg_seeking_size               73
#define navigationPkg_target_size                96

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
