/************************************************************************************************************
Module:       sys_tlv_code

Revision:     1.0

Description:  ---

Notes:        ---

History:
Date          Name      Changes
-----------   ----      -------------------------------------------------------------------------------------
01/20/2022    TH       Began Coding    (TH = Toan Huynh)

COPYRIGHT Â© 2022 TOAN HUYNH.  ALL RIGHTS RESERVED.

THIS SOURCE IS TOAN HUYNH PROPRIETARY AND CONFIDENTIAL!  NO PART OF THIS
SOURCE MAY BE DISCLOSED IN ANY MANNER TO A THIRD PARTY WITHOUT PRIOR WRITTEN
CONSENT OF TOAN HUYNH.
************************************************************************************************************/

//###########################################################################################################
//      #INCLUDES
//###########################################################################################################
#include <stdio.h>
#include <string.h>
#include <stdint.h>
#include "crc32.h"
#include "sys_tlv_code.h"
#include "hc_msg_code.h"



//###########################################################################################################
//      TESTING #DEFINES
//###########################################################################################################
#define TEMP_CONFIG       (1)


//###########################################################################################################
//      CONSTANT #DEFINES
//###########################################################################################################



//###########################################################################################################
//      MACROS
//###########################################################################################################



//###########################################################################################################
//      MODULE TYPES
//###########################################################################################################



//###########################################################################################################
//      CONSTANTS
//###########################################################################################################
#if TEMP_CONFIG
#define HEADER_LENGTH       10
#else
#define HEADER_LENGTH       9
#endif

#define FOOTER_LENGTH       5



//###########################################################################################################
//      MODULE LEVEL VARIABLES
//###########################################################################################################
static uint8_t const major_version = 0;
static uint8_t const minor_version = 1;


//###########################################################################################################
//      PRIVATE FUNCTION PROTOTYPES
//###########################################################################################################



//###########################################################################################################
//      PUBLIC FUNCTIONS
//###########################################################################################################
/********************************************************************************
Function:
  tlv_format_header()
Input Parameters:
  ---
Output Parameters:
  ---
Description:
  ---
Notes:
  ---
Author, Date:
  Toan Huynh, 01/20/2022
*********************************************************************************/
uint32_t tlv_format_header(uint8_t *buf, uint32_t buf_len, uint32_t data_len, hc_code_e code, uint32_t src_addr)
{
  uint32_t header_len = HEADER_LENGTH;

  if (buf_len <= header_len)
  {
    return 0;
  }

#if TEMP_CONFIG
  /* [S][Opcode][Source Addr 0xXXXX][Data length 0xXXXX][Data][\n\r] */
  /* Signature */
  buf[0] = 'S';
  
  /* Code */
  buf[1] = code;

  /* Source Address */
  snprintf((char *)(buf + 2), 4, "%04X", src_addr);

  /* Data length */
  snprintf((char *)(buf + 6), 4, "%04X", data_len);

#else

  /* Signature */
  buf[0] = 'B';
  buf[1] = 'P';

  /* Version */
  buf[2] = major_version;
  buf[3] = minor_version;

  /* Type */
  buf[4] = code;
  
  /* Length */
  memcpy(buf + 5, &data_len, sizeof(data_len));
#endif

  return header_len + data_len;
}

/********************************************************************************
Function:
  tlv_get_header_length()
Input Parameters:
  ---
Output Parameters:
  ---
Description:
  ---
Notes:
  ---
Author, Date:
  Toan Huynh, 01/20/2022
*********************************************************************************/
uint32_t tlv_get_header_length(void)
{
  return HEADER_LENGTH;
}

/********************************************************************************
Function:
  tlv_format_footer()
Input Parameters:
  ---
Output Parameters:
  ---
Description:
  ---
Notes:
  ---
Author, Date:
  Toan Huynh, 01/20/2022
*********************************************************************************/
uint32_t tlv_format_footer(uint8_t *buf, uint32_t data_len, uint32_t buf_len, uint32_t header_len)
{
  uint32_t packet_len = header_len + data_len;

  if (packet_len + FOOTER_LENGTH > buf_len)
  {
    return 0;
  }

#if TEMP_CONFIG

  buf[packet_len] = 'e';
  buf[packet_len + 1] = 'n';
  buf[packet_len + 2] = 'd';
  buf[packet_len + 3] = '\n';
  buf[packet_len + 4] = '\r';

  return 5;

#else
  uint32_t crc = crc32_calc(CRC_INIT_SEED, data_len, buf + header_len);

  memcpy(buf + packet_len, &crc, sizeof(crc));

  buf[packet_len + sizeof(crc)] = 'E';

  return crc;
#endif
}

//###########################################################################################################
//      PRIVATE FUNCTIONS
//###########################################################################################################


//###########################################################################################################
//      INTERRUPTS
//###########################################################################################################



//###########################################################################################################
//      TEST HARNESSES
//###########################################################################################################



//###########################################################################################################
//      END OF sys_tlv_code.c
//###########################################################################################################
